name: Deploy Without Docker Hub

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run Trivy vulnerability scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true

    - name: Upload files to Green EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.GREEN_IP }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        source: "."
        target: "/home/ubuntu/bluegreen-app"

    - name: Deploy on Green EC2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.GREEN_IP }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        script: |
          cd /home/ubuntu/bluegreen-app
          sudo docker-compose down || true
          sudo docker-compose up -d --build

    - name: Health Check on Green
      id: health
      continue-on-error: true
      run: |
        sleep 5
        curl --fail http://${{ secrets.GREEN_IP }}:8080 || exit 1

    - name: Rollback to Blue (on health check failure)
      if: steps.health.outcome == 'failure'
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.PROXY_IP }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        script: |
          echo "Rolling back to BLUE..."
          sudo sed -i 's/${{ secrets.GREEN_IP }}/${{ secrets.BLUE_IP }}/g' /etc/nginx/nginx.conf
          sudo systemctl reload nginx

    - name: Switch Nginx to Green (only if health check passed)
      if: steps.health.outcome == 'success'
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.PROXY_IP }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        script: |
          echo "Switching to GREEN..."
          sudo sed -i 's/${{ secrets.BLUE_IP }}/${{ secrets.GREEN_IP }}/g' /etc/nginx/nginx.conf
          sudo systemctl reload nginx
